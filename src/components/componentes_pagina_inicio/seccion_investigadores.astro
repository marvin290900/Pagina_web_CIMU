---
const { investigadores, imagenDefault } = Astro.props;
---

<section id="seccionInvestigadores" class="bg-white text-center">
  <div class="container mx-auto">
    
    <div
      id="quinto_texto_centro_investigacion"
      class="flex flex-wrap justify-center gap-8 px-4 py-5 transition-all duration-1000 opacity-0 translate-y-8"
    >
      {
  investigadores.map((inv) => (
    
    <a href={`/investigadores/${encodeURIComponent(inv._id)}`} class="flex flex-col items-center w-full max-w-xs border-2 border-transparent rounded-lg transition-transform duration-300 hover:scale-105 hover:border-[#28388659] cursor-pointer">
      <div class="relative w-28 h-28 flex items-center justify-center mb-2 ">
        <div class="absolute inset-0 rounded-full border-4 animate-spin-gradient "></div>
        <div class="w-24 h-24 rounded-full overflow-hidden bg-white z-10">
          <img
            src={inv.foto && inv.foto.trim() !== '' ? inv.foto : imagenDefault.src}
            class="w-full h-full object-cover"
            alt={`Foto de ${inv.nombre}`}
          />
        </div>
      </div>
      <div class="text-center text-gray-800">
        <p class="text-lg font-semibold">{inv.nombre}</p>
        <p class="text-sm">{inv.cargo}</p>
        <p class="text-sm ">{inv.correo}</p>
      </div>
    </a>
  ))
}

    </div>
  </div>
</section>

<script>
  const targets = document.querySelectorAll(
    " #cuarto_texto_centro_investigacion, #quinto_texto_centro_investigacion"
  );

  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.remove("opacity-0", "translate-y-8");
          entry.target.classList.add("opacity-100", "translate-y-0");
        }
      });
    },
    {
      threshold: 0.1,
    }
  );

  targets.forEach((target) => observer.observe(target));
</script>

<style>
  @keyframes girarBorde {
    0% {
      background-position: 0% 50%;
    }
    100% {
      background-position: 360% 50%;
    }
  }

  .borde-giratorio {
    position: relative;
    border-radius: 1rem; /* mismo que rounded-2xl */
    padding: 2px; /* espacio para el borde animado */
    background: linear-gradient(270deg, #ffffff, #283886, #ffffff, #283886);
    background-size: 400% 400%;
    animation: girarBorde 8s linear infinite;
  }

  .borde-giratorio > .contenido {
    background: white; /* o transparente si quieres */
    border-radius: 1rem;
    height: 100%;
    width: 100%;
  }

  @keyframes spin-gradient {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}


.animate-spin-gradient {
  background: conic-gradient(
    from 0deg,
    #283886,
    #ffffff,
    #283886,
    #ffffff,
    #283886
  );
  animation: spin-gradient 5s linear infinite;
  transition: all 0.3s ease-in-out;
}


</style>