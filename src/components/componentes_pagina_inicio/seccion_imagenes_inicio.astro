---
const { TodasLasImagenes } = Astro.props;
---

<section id="seccionImagenesInicio" 
  class="relative w-full flex justify-center py-6 bg-white">
  
  <div class="relative w-full max-w-[1000px] aspect-[851/315] overflow-hidden rounded-lg shadow-md">
    <div id="carousel" class="flex transition-transform duration-1000 ease-in-out h-full">
      {TodasLasImagenes.concat(TodasLasImagenes).map((img) => (
        <div class="flex-shrink-0 w-full h-full">
          <img src={img.foto} class="w-full h-full object-contain" />
        </div>
      ))}
    </div>

    <!-- Flechas -->
    <button id="prevBtn" class="absolute top-1/2 left-2 transform -translate-y-1/2 bg-black/50 text-white p-2 rounded-full hover:bg-black/70">&#10094;</button>
    <button id="nextBtn" class="absolute top-1/2 right-2 transform -translate-y-1/2 bg-black/50 text-white p-2 rounded-full hover:bg-black/70">&#10095;</button>
  </div>
</section>

<script is:inline>
document.addEventListener("DOMContentLoaded", () => {
  const track = document.getElementById("carousel");
  const originalSlides = Array.from(track.children);
  const total = originalSlides.length;

  // Clonar la primera y la última para hacer el loop suave
  const firstClone = originalSlides[0].cloneNode(true);
  const lastClone = originalSlides[total - 1].cloneNode(true);
  track.appendChild(firstClone);
  track.insertBefore(lastClone, originalSlides[0]);

  const slides = track.children;
  let index = 1; // empezamos en el primer "real"
  const dots = document.querySelectorAll("#dotsContainer .dot");

  function updateDots() {
    dots.forEach((dot, i) => {
      dot.classList.toggle("bg-white", i === (index - 1 + total) % total);
      dot.classList.toggle("bg-white/50", i !== (index - 1 + total) % total);
    });
  }

  function goToSlide(i, animate = true) {
    track.style.transitionDuration = animate ? "1000ms" : "0ms";
    track.style.transform = `translateX(-${i * 100}%)`;
    updateDots();
  }

  function nextSlide() {
    index++;
    goToSlide(index);

    if (index === total + 1) {
      setTimeout(() => {
        track.style.transitionDuration = "0ms";
        index = 1; // volver al primer real
        goToSlide(index, false);
      }, 1000);
    }
  }

  function prevSlide() {
    index--;
    goToSlide(index);

    if (index === 0) {
      setTimeout(() => {
        track.style.transitionDuration = "0ms";
        index = total; // volver al último real
        goToSlide(index, false);
      }, 1000);
    }
  }

  let interval = setInterval(nextSlide, 5000);

  // Botones
  document.getElementById("prevBtn").addEventListener("click", () => {
    prevSlide();
    resetInterval();
  });

  document.getElementById("nextBtn").addEventListener("click", () => {
    nextSlide();
    resetInterval();
  });

  // Dots clickeables
  dots.forEach((dot, i) => {
    dot.addEventListener("click", () => {
      index = i + 1; // +1 porque el 0 es el clon
      goToSlide(index);
      resetInterval();
    });
  });

  function resetInterval() {
    clearInterval(interval);
    interval = setInterval(nextSlide, 5000);
  }

  // Inicializar
  goToSlide(index, false);
});

</script>
