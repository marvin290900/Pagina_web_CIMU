<section id="apartadoInvestigadoresAdmin" class="py-8 bg-white text-black">
  <div class="container mx-auto px-4">
    <div class="flex justify-between items-center mb-6">
      <h2 class="text-2xl font-semibold">Investigadores Registrados</h2>
      <button
        id="btnMostrarModalAgregar"
        class="bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 transition"
      >
        + Agregar Investigador
      </button>
    </div>

    <!-- Modal para agregar investigador -->
    <dialog id="modalAgregarInvestigador" class="modal">
      <div class="modal-box max-w-3xl">
        <form
          id="formAgregarInvestigador"
          class="space-y-5 bg-gray-100 p-6 rounded shadow"
          method="dialog"
          enctype="multipart/form-data"
        >
          <button
            class="btn btn-sm btn-circle btn-ghost absolute right-2 top-2"
            type="button"
            id="btnCerrarModalAgregar">✕</button
          >

          <h2 class="text-xl font-semibold mb-4">Agregar Investigador</h2>

          <!-- Nombre completo -->
          <div>
            <label for="nombre" class="block font-medium">Nombre completo</label
            >
            <input
              id="nombre"
              name="nombre"
              type="text"
              required
              class="input w-full"
            />
          </div>

          <!-- Correo electrónico -->
          <div>
            <label for="email" class="block font-medium"
              >Correo electrónico</label
            >
            <input
              id="email"
              name="email"
              type="email"
              required
              class="input w-full"
            />
          </div>

          <!-- Rol -->
          <div>
            <label for="rol" class="block font-medium">Rol</label>
            <select
              id="rol"
              name="rol"
              required
              class="select select-bordered w-full"
            >
              <option value="">Selecciona una opción</option>
              <option value="directivo">Directivo</option>
              <option value="pasante">Pasante</option>
            </select>
          </div>

          <!-- Departamento -->
          <div>
            <label for="departamento" class="block font-medium"
              >Departamento</label
            >
            <input
              id="departamento"
              name="departamento"
              type="text"
              class="input w-full"
            />
          </div>

          <!-- Teléfonos -->
          <div>
            <label for="telefonos" class="block font-medium">Teléfono(s)</label>
            <input
              id="telefonos"
              name="telefonos"
              type="text"
              placeholder="Ej: 7111-2222, 7888-9999"
              class="input w-full"
            />
          </div>

          <!-- Redes Sociales -->
          <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div>
              <label for="facebook" class="block font-medium">Facebook</label>
              <input
                id="facebook"
                name="facebook"
                type="url"
                class="input w-full"
              />
            </div>
            <div>
              <label for="twitter" class="block font-medium">Twitter / X</label>
              <input
                id="twitter"
                name="twitter"
                type="url"
                class="input w-full"
              />
            </div>
            <div>
              <label for="linkedin" class="block font-medium">LinkedIn</label>
              <input
                id="linkedin"
                name="linkedin"
                type="url"
                class="input w-full"
              />
            </div>
          </div>

          <!-- Descripción -->
          <div>
            <label for="descripcion" class="block font-medium"
              >Descripción</label
            >
            <textarea
              id="descripcion"
              name="descripcion"
              rows="3"
              class="textarea w-full"></textarea>
          </div>

          <!-- Campo de investigación -->
          <div>
            <label for="campoInvestigacion" class="block font-medium"
              >Campo de investigación</label
            >
            <input
              id="campoInvestigacion"
              name="campoInvestigacion"
              type="text"
              class="input w-full"
            />
          </div>

          <!-- Publicaciones relevantes -->
          <div>
            <label for="publicaciones" class="block font-medium"
              >Publicaciones relevantes</label
            >
            <textarea
              id="publicaciones"
              name="publicaciones"
              rows="2"
              placeholder="Separadas por comas"
              class="textarea w-full"></textarea>
          </div>

          <!-- Años de experiencia -->
          <div>
            <label for="experiencia" class="block font-medium"
              >Años de experiencia</label
            >
            <input
              id="experiencia"
              name="experiencia"
              type="number"
              min="0"
              class="input w-full"
            />
          </div>

          <!-- Foto -->
          <div>
            <label for="foto" class="block font-medium">Foto</label>
            <input
              id="foto"
              name="foto"
              type="file"
              accept="image/*"
              class="file-input file-input-bordered w-full"
            />
          </div>

          <!-- Currículum en PDF -->
          <div>
            <label for="cv" class="block font-medium">Currículum (PDF)</label>
            <input
              id="cv"
              name="cv"
              type="file"
              accept="application/pdf"
              class="file-input file-input-bordered w-full"
            />
          </div>

          <!-- Botones -->
          <div class="flex justify-end gap-2">
            <button type="button" class="btn" id="btnCancelarAgregar"
              >Cancelar</button
            >
            <button
              type="button"
              class="btn btn-warning"
              id="btnAbrirConfirmarGuardarAgregar">Guardar</button
            >
          </div>
        </form>
      </div>
    </dialog>

    <!-- Modal para editar investigador -->
    <dialog id="modalEditarInvestigador" class="modal">
      <div class="modal-box">
        <form
          id="formEditarInvestigador"
          class="space-y-5 bg-gray-100 p-6 rounded shadow"
          method="dialog"
        >
          <button
            class="btn btn-sm btn-circle btn-ghost absolute right-2 top-2"
            type="button"
            id="btnCerrarModalEditar">✕</button
          >

          <input type="hidden" id="edit_id" />

          <div>
            <label for="edit_nombre" class="block font-medium"
              >Nombre completo</label
            >
            <input
              id="edit_nombre"
              name="edit_nombre"
              type="text"
              required
              class="input"
            />
          </div>
          <div>
            <label for="edit_email" class="block font-medium"
              >Correo electrónico</label
            >
            <input
              id="edit_email"
              name="edit_email"
              type="email"
              required
              class="input"
            />
          </div>
          <div>
            <label for="edit_departamento" class="block font-medium"
              >Departamento</label
            >
            <input
              id="edit_departamento"
              name="edit_departamento"
              type="text"
              class="input"
            />
          </div>
          <div>
            <label for="edit_descripcion" class="block font-medium"
              >Descripción</label
            >
            <textarea
              id="edit_descripcion"
              name="edit_descripcion"
              rows="3"
              class="input"></textarea>
          </div>
          <div class="flex justify-end gap-2">
            <button type="button" class="btn" id="btnCancelarEdicion"
              >Cancelar</button
            >
            <button
              type="button"
              class="btn btn-warning"
              id="btnAbrirConfirmarGuardar">Guardar</button
            >
          </div>
        </form>
      </div>
    </dialog>

    <!-- Filtro -->
    <div
      class="flex flex-col md:flex-row md:items-center md:justify-between gap-4 mb-4"
    >
      <div class="flex gap-2 items-center">
        <select
          id="filtroCategoria"
          class="border border-gray-300 rounded px-2 py-1"
        >
          <option value="">Todos</option>
          <option value="directivo">Directivos</option>
          <option value="pasante">Pasantes</option>
        </select>

        <div
          class="flex items-center border border-gray-300 rounded overflow-hidden"
        >
          <input
            id="filtroNombre"
            type="text"
            placeholder="Buscar por nombre"
            class="px-3 py-1 outline-none"
          />
          <button
            id="btnLimpiarFiltroNombre"
            class="text-sm text-gray-500 hover:text-red-600 px-2 hidden mdi mdi-close"
            aria-label="Limpiar búsqueda"></button>
        </div>
      </div>
    </div>

    <!-- Lista de investigadores -->
    <div id="listaInvestigadores" class="space-y-4">
      <!-- JS insertará aquí las tarjetas -->
    </div>

    <!-- Mensaje cuando no hay investigadores o cuando no hay coincidencias -->
    <p id="mensajeVacio" class="text-center text-gray-500 text-lg mt-6 hidden">
    </p>

    <!-- Modal para mostrar investigador -->
    <dialog id="modalInvestigador" class="modal">
      <div class="modal-box">
        <form method="dialog">
          <button class="btn btn-sm btn-circle btn-ghost absolute right-2 top-2"
            >✕</button
          >
        </form>
        <div class="text-center mb-4">
          <img
            id="modalImagen"
            class="mx-auto w-20 h-20 rounded-full object-cover border"
          />
        </div>
        <div id="modalRedes" class="flex justify-center gap-4 mb-4"></div>
        <h3 id="modalNombre" class="text-lg font-bold mb-2"></h3>
        <p id="modalCorreo" class="text-sm text-gray-700 mb-1"></p>
        <p id="modalDepartamento" class="text-sm text-gray-600 mb-1"></p>
        <p id="modalDescripcion" class="text-sm text-gray-500"></p>
      </div>
    </dialog>

    <!-- Modal para confirmar agregar investigador -->
    <dialog id="modalConfirmarAgregar" class="modal">
      <div class="modal-box">
        <h3 class="font-bold text-lg mb-4">¿Guardar nuevo investigador?</h3>
        <p class="text-sm text-gray-600 mb-4">
          ¿Estás seguro de que deseas agregar este nuevo investigador?
        </p>
        <div class="flex justify-end gap-2">
          <button id="btnCancelarConfirmarAgregar" class="btn">Cancelar</button>
          <button id="btnConfirmarAgregar" class="btn btn-success"
            ><span class="btn-text">Guardar</span>
            <span class="btn-spinner hidden loading loading-spinner loading-sm"
            ></span></button
          >
        </div>
      </div>
    </dialog>

    <!-- Modal para confirmar eliminacion -->
    <dialog id="modalConfirmarEliminar" class="modal">
      <div class="modal-box">
        <h3 class="font-bold text-lg mb-4">
          ¿Estás seguro de eliminar este investigador?
        </h3>
        <div class="flex justify-end gap-2">
          <button id="btnCancelarEliminar" class="btn">Cancelar</button>
          <button id="btnConfirmarEliminar" class="btn btn-error"
            ><span class="btn-text">Si, Eliminar</span>
            <span class="btn-spinner hidden loading loading-spinner loading-sm"
            ></span></button
          >
        </div>
      </div>
    </dialog>

    <!-- Modal para confirmar guardar lo editado -->
    <dialog id="modalConfirmarGuardar" class="modal">
      <div class="modal-box">
        <h3 class="font-bold text-lg mb-4">¿Deseas guardar los cambios?</h3>
        <div class="flex justify-end gap-2">
          <button id="btnCancelarGuardar" class="btn">Cancelar</button>
          <button id="btnConfirmarGuardar" class="btn btn-warning"
            ><span class="btn-text">Guardar Cambios</span>
            <span class="btn-spinner hidden loading loading-spinner loading-sm"
            ></span></button
          >
        </div>
      </div>
    </dialog>

    <!-- Spinner de carga -->
    <div
      id="spinner"
      class="fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 hidden z-50"
    >
      <span class="loading loading-spinner loading-xl"></span>
    </div>
  </div>
</section>

<script>
  const modalConfirmarAgregar = document.getElementById(
    "modalConfirmarAgregar"
  ) as HTMLDialogElement;
  const btnAbrirConfirmarGuardarAgregar = document.getElementById(
    "btnAbrirConfirmarGuardarAgregar"
  ) as HTMLButtonElement;
  const btnCancelarConfirmarAgregar = document.getElementById(
    "btnCancelarConfirmarAgregar"
  ) as HTMLButtonElement;
  const btnConfirmarAgregar = document.getElementById(
    "btnConfirmarAgregar"
  ) as HTMLButtonElement;
  const btnCancelarAgregar = document.getElementById(
    "btnCancelarAgregar"
  ) as HTMLButtonElement;
  const modalAgregar = document.getElementById(
    "modalAgregarInvestigador"
  ) as HTMLDialogElement;
  const btnMostrarModalAgregar = document.getElementById(
    "btnMostrarModalAgregar"
  ) as HTMLButtonElement;
  const btnCerrarModalAgregar = document.getElementById(
    "btnCerrarModalAgregar"
  ) as HTMLButtonElement;
  const modalEditar = document.getElementById(
    "modalEditarInvestigador"
  ) as HTMLDialogElement;
  const form = document.getElementById(
    "formAgregarInvestigador"
  ) as HTMLFormElement;
  const formEditar = document.getElementById(
    "formEditarInvestigador"
  ) as HTMLFormElement;
  const btnCerrarModalEditar = document.getElementById(
    "btnCerrarModalEditar"
  ) as HTMLButtonElement;
  const btnCancelarEdicion = document.getElementById(
    "btnCancelarEdicion"
  ) as HTMLButtonElement;
  const btnAbrirConfirmarGuardar = document.getElementById(
    "btnAbrirConfirmarGuardar"
  ) as HTMLButtonElement;

  const modalConfirmarGuardar = document.getElementById(
    "modalConfirmarGuardar"
  ) as HTMLDialogElement;
  const btnCancelarGuardar = document.getElementById(
    "btnCancelarGuardar"
  ) as HTMLButtonElement;
  const btnConfirmarGuardar = document.getElementById(
    "btnConfirmarGuardar"
  ) as HTMLButtonElement;

  const modalConfirmarEliminar = document.getElementById(
    "modalConfirmarEliminar"
  ) as HTMLDialogElement;
  const btnCancelarEliminar = document.getElementById(
    "btnCancelarEliminar"
  ) as HTMLButtonElement;
  const btnConfirmarEliminar = document.getElementById(
    "btnConfirmarEliminar"
  ) as HTMLButtonElement;

  const listaInvestigadores = document.getElementById(
    "listaInvestigadores"
  ) as HTMLDivElement;
  const filtroCategoria = document.getElementById(
    "filtroCategoria"
  ) as HTMLSelectElement;
  const filtroNombre = document.getElementById(
    "filtroNombre"
  ) as HTMLInputElement;
  const btnLimpiarFiltroNombre = document.getElementById(
    "btnLimpiarFiltroNombre"
  ) as HTMLButtonElement;

  let investigadores = [];
  let idAEliminar = null;


  btnMostrarModalAgregar.addEventListener("click", () => {
    modalAgregar.showModal();
  });

  btnAbrirConfirmarGuardarAgregar.addEventListener("click", () => {
    modalConfirmarAgregar.showModal();
  });

  btnCancelarAgregar.addEventListener("click", () => {
    modalAgregar.close();
  });

  btnCancelarConfirmarAgregar.addEventListener("click", () => {
    modalConfirmarAgregar.close();
  });

  btnCerrarModalAgregar.addEventListener("click", () => {
    modalAgregar.close();
  });

  btnCerrarModalEditar.addEventListener("click", () => {
    modalEditar.close();
  });

  btnCancelarEdicion.addEventListener("click", () => {
    modalEditar.close();
  });

  btnAbrirConfirmarGuardar.addEventListener("click", () => {
    modalConfirmarGuardar.showModal();
  });

  btnCancelarGuardar.addEventListener("click", () => {
    modalConfirmarGuardar.close();
  });

  btnCancelarEliminar.addEventListener("click", () => {
    modalConfirmarEliminar.close();
  });

  //FUncion para mostrar mesanje personalizado
   function showMessage(mensaje, tipo = "info") {
    // Crear contenedor si no existe
    let contenedor = document.getElementById("message-container");
    if (!contenedor) {
      contenedor = document.createElement("div");
      contenedor.id = "message-container";
      contenedor.style.position = "fixed";
      contenedor.style.top = "80px";
      contenedor.style.left = "50%";
      contenedor.style.transform = "translateX(-50%)";
      contenedor.style.zIndex = "9999";
      document.body.appendChild(contenedor);
    }

    // Crear el mensaje
    const mensajeElem = document.createElement("div");
    mensajeElem.textContent = mensaje;
    mensajeElem.style.marginBottom = "10px";
    mensajeElem.style.padding = "12px 20px";
    mensajeElem.style.borderRadius = "5px";
    mensajeElem.style.color = "white";
    mensajeElem.style.minWidth = "200px";
    mensajeElem.style.boxShadow = "0 2px 8px rgba(0,0,0,0.2)";
    mensajeElem.style.fontWeight = "600";
    mensajeElem.style.fontFamily = "sans-serif";
    mensajeElem.style.cursor = "default";
    mensajeElem.style.opacity = "1";
    mensajeElem.style.transition = "opacity 0.5s ease";

    // Colores según tipo
    switch (tipo) {
      case "success":
        mensajeElem.style.backgroundColor = "#28a745";
        break;
      case "error":
        mensajeElem.style.backgroundColor = "#dc3545";
        break;
      case "info":
      default:
        mensajeElem.style.backgroundColor = "#007bff";
        break;
    }

    contenedor.appendChild(mensajeElem);

    // Desaparece después de 3 segundos
    setTimeout(() => {
      mensajeElem.style.opacity = "0";
      setTimeout(() => {
        mensajeElem.remove();
      }, 500);
    }, 3000);
  }


  // Funcion para filtrar por categoria
  filtroCategoria.addEventListener("change", renderInvestigadores);
  filtroNombre.addEventListener("input", () => {
    if (filtroNombre.value.length > 0) {
      btnLimpiarFiltroNombre.style.display = "block";
    } else {
      btnLimpiarFiltroNombre.style.display = "none";
    }
    renderInvestigadores();
  });

  // Boton para limpiar filtro de nombre
  btnLimpiarFiltroNombre.addEventListener("click", () => {
    filtroNombre.value = "";
    btnLimpiarFiltroNombre.style.display = "none";
    filtroNombre.focus();
    renderInvestigadores();
  });

  //datalles par evitar que se envien muchas peticiones al servidor
    function mostrarSpinnerEnBoton(boton) {
    const texto = boton.querySelector(".btn-text");
    const spinner = boton.querySelector(".btn-spinner");
    if (texto && spinner) {
      texto.classList.add("hidden");
      spinner.classList.remove("hidden");
      boton.disabled = true;
    }
  }

  function ocultarSpinnerEnBoton(boton) {
    const texto = boton.querySelector(".btn-text");
    const spinner = boton.querySelector(".btn-spinner");
    if (texto && spinner) {
      texto.classList.remove("hidden");
      spinner.classList.add("hidden");
      boton.disabled = false;
    }
  }

  btnConfirmarAgregar.addEventListener("click", async () => {
    const boton = btnConfirmarAgregar;
    const formData = new FormData(form);
    const email = formData.get("email").toString().toLowerCase().trim();
    const idTransformado = `${email.replace(/@/g, "_")}`;
    mostrarSpinnerEnBoton(boton);

    const nuevo = {
      _id: idTransformado,
      nombre: formData.get("nombre"),
      email: formData.get("email"),
      departamento: formData.get("departamento"),
      descripcion: formData.get("descripcion"),
      categoria: formData.get("rol"),
      type: "investigador",
      telefonos: formData.get("telefonos"),
      creado_en: new Date().toISOString(),
      redes: {
        facebook: formData.get("facebook"),
        twitter: formData.get("twitter"),
        linkedin: formData.get("linkedin"),
      },
    };


    try {
      const res = await fetch("/api/investigadores/agregar", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(nuevo),
      });

      if (!res.ok) {
        const error = await res.text();
        throw new Error(`Error HTTP: ${res.status} - ${error}`);
      }

      const result = await res.json();

      if (result.ok) {
        showMessage("Investigador agregado correctamente", "success");
        form.reset();
        modalAgregar.close();
        modalConfirmarAgregar.close();
        await cargarInvestigadores();
      } else {
        showMessage("Error al agregar: " + result.error, "error");
      }
    } catch (err) {
      console.error("Error al enviar:", err);
      showMessage("Error al agregar", "error");
    } finally {
      ocultarSpinnerEnBoton(boton);
    }
  });

//Boton para confirmar guardar cambio a la hora de editar investigador
  btnConfirmarGuardar.addEventListener("click", async () => {
    const boton = btnConfirmarGuardar;
    mostrarSpinnerEnBoton(boton);

    const id = document.getElementById("edit_id").value;
    const actualizado = {
      nombre: document.getElementById("edit_nombre").value,
      email: document.getElementById("edit_email").value,
      departamento: document.getElementById("edit_departamento").value,
      descripcion: document.getElementById("edit_descripcion").value,
    };

    try {
      const res = await fetch(`/api/investigadores/editar`, {
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ id, ...actualizado }),
      });

      const result = await res.json();
      if (result.ok) {
        showMessage("Cambios guardados correctamente", "success");
        modalConfirmarGuardar.close();
        modalEditar.close();
        await cargarInvestigadores();
      } else {
        showMessage("Error al guardar", "error");
      }
    } catch (err) {
      console.error("Error al guardar:", err);
    } finally {
      ocultarSpinnerEnBoton(boton);
    }
  });

  //Boton para confirmar eliminar investigador
  btnConfirmarEliminar.addEventListener("click", async () => {
    const boton = btnConfirmarEliminar;
    mostrarSpinnerEnBoton(boton);

    if (!idAEliminar) {
      showMessage("ID inválido para eliminar", "error");
      ocultarSpinnerEnBoton(boton);
      return;
    }

    // Llamamos a la función para eliminar el investigador por ID
    await eliminarInvestigador(idAEliminar);

    // Limpiamos el id almacenado
    idAEliminar = null;

    ocultarSpinnerEnBoton(boton);

    // Cerramos el modal de confirmación
    modalConfirmarEliminar.close();

    // Recargamos la lista para actualizar la UI
    await cargarInvestigadores();
  });

  function prepararEliminarInvestigador(id) {
    idAEliminar = id;
    modalConfirmarEliminar.showModal();
  }

  async function cargarInvestigadores() {
    try {
      const res = await fetch("/api/investigadores/obtener");
      const data = await res.json();
      investigadores = data.docs || [];
      await renderInvestigadores();
    } catch (err) {
      console.error("Error cargando investigadores:", err);
    }
  }

  

  function editarInvestigador(id) {
    const inv = investigadores.find((i) => i._id === id);
    if (!inv) return alert("Investigador no encontrado");

    document.getElementById("edit_id").value = inv._id;
    document.getElementById("edit_nombre").value = inv.nombre || "";
    document.getElementById("edit_email").value = inv.email || "";
    document.getElementById("edit_departamento").value = inv.departamento || "";
    document.getElementById("edit_descripcion").value = inv.descripcion || "";

    modalEditar.showModal();
  }

  async function eliminarInvestigador(id) {
    const respuesta = await fetch("/api/investigadores/eliminar", {
      method: "DELETE",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ id }),
    });

    const resultado = await respuesta.json();

    if (resultado.ok) {
      showMessage("Investigador eliminado correctamente", "success");
      // Aquí podrías volver a cargar la lista o actualizar la UI
    } else {
      showMessage("Error al eliminar: " + resultado.error, "error");
    }
  }

   function mostrarModalInvestigador(inv) {
    const modal = document.getElementById(
      "modalInvestigador"
    ) as HTMLDialogElement;
    document.getElementById("modalNombre")!.textContent = inv.nombre;
    document.getElementById("modalCorreo")!.textContent = inv.email;
    document.getElementById("modalDepartamento")!.textContent =
      "Departamento: " + (inv.departamento || "");
    document.getElementById("modalDescripcion")!.textContent =
      inv.descripcion || "";
    document.getElementById("modalImagen")!.src =
      `${inv.foto}`;

    const contenedorRedes = document.getElementById("modalRedes")!;
    contenedorRedes.innerHTML = ""; // limpiar

    const redes = inv.redes || {};
    if (redes.facebook)
      contenedorRedes.innerHTML += `<a href="${redes.facebook}" target="_blank"><i class="mdi mdi-facebook text-blue-600 text-xl"></i></a>`;
    if (redes.twitter)
      contenedorRedes.innerHTML += `<a href="${redes.twitter}" target="_blank"><i class="mdi mdi-twitter text-sky-500 text-xl"></i></a>`;
    if (redes.linkedin)
      contenedorRedes.innerHTML += `<a href="${redes.linkedin}" target="_blank"><i class="mdi mdi-linkedin text-blue-700 text-xl"></i></a>`;

    modal.showModal();
  }

  form.addEventListener("submit", (e) => {
    e.preventDefault();
  });


  function renderInvestigadores() {
    const categoriaSeleccionada = filtroCategoria.value.toLowerCase();
    const textoBusqueda = filtroNombre.value.toLowerCase();
    const mensajeVacio = document.getElementById("mensajeVacio");

    const filtrados = investigadores.filter((inv) => {
      const coincideCategoria =
        !categoriaSeleccionada ||
        inv.categoria?.toLowerCase() === categoriaSeleccionada;
      const coincideNombre = inv.nombre?.toLowerCase().includes(textoBusqueda);
      return coincideCategoria && coincideNombre;
    });

    listaInvestigadores.innerHTML = "";

    if (filtrados.length === 0) {
      let mensaje = "";

      if (investigadores.length === 0) {
        mensaje = "No hay investigadores registrados aún.";
      } else if (categoriaSeleccionada && textoBusqueda) {
        mensaje = `No se encontraron investigadores en la categoría "${categoriaSeleccionada}" que coincidan con "${textoBusqueda}".`;
      } else if (categoriaSeleccionada) {
        mensaje = `No hay investigadores en la categoría "${categoriaSeleccionada}".`;
      } else if (textoBusqueda) {
        mensaje = `No se encontró ningún investigador con el nombre "${textoBusqueda}".`;
      } else {
        mensaje = "No se encontraron investigadores.";
      }

      mensajeVacio.textContent = mensaje;
      mensajeVacio.classList.remove("hidden");
      return;
    }

    mensajeVacio.classList.add("hidden");

    filtrados.forEach((inv) => {
      const card = document.createElement("div");
      card.className =
        "border border-gray-300 p-4 rounded-lg shadow-sm bg-white flex justify-between items-center";

      const infoDiv = document.createElement("div");
      infoDiv.className = "flex items-center gap-4 cursor-pointer";
      infoDiv.innerHTML = `
      <img src="${inv.foto}" class="w-16 h-16 rounded-full object-cover border" />
      <div>
        <h3 class="text-lg font-semibold">${inv.nombre}</h3>
        <p class="text-sm text-gray-700">${inv.email}</p>
        <p class="text-sm text-gray-600">${inv.departamento || ""}</p>
        <p class="text-sm text-gray-500">${inv.descripcion || ""}</p>
      </div>
    `;
      infoDiv.addEventListener("click", () => mostrarModalInvestigador(inv));

      const botones = document.createElement("div");
      botones.className = "flex gap-2";

      const btnEditar = document.createElement("button");
      btnEditar.textContent = "Editar";
      btnEditar.className =
        "px-3 py-1 bg-yellow-500 text-white rounded hover:bg-yellow-600";
      btnEditar.addEventListener("click", () => editarInvestigador(inv._id));

      const btnEliminar = document.createElement("button");
      btnEliminar.textContent = "Eliminar";
      btnEliminar.className =
        "px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700";
      btnEliminar.addEventListener("click", () =>
        prepararEliminarInvestigador(inv._id)
      );

      botones.appendChild(btnEditar);
      botones.appendChild(btnEliminar);

      card.appendChild(infoDiv);
      card.appendChild(botones);
      listaInvestigadores.appendChild(card);
    });
  }

  cargarInvestigadores();
</script>
